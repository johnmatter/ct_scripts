#include <algorithm>
#include <utility>
#include <fstream>
#include <vector>
#include <tuple>
#include <map>

#include <TCanvas.h>
#include <TStyle.h>
#include <TROOT.h>
#include <TH1F.h>
#include <TH2F.h>

#include <CTData.h>
#include <CTCuts.h>

// Before calculate absorption, we need to know where good coin events'
// electrons lie in the HMS acceptance. To that end, I place tight cuts
// on SHMS xptar, yptar, and dp; that defines a region of SHMS acceptance
// I can use in a singles run to calculate absorption.

void plot_central_acceptance() {
    gStyle->SetOptStat(11111);

    TString pdfFilename = "acceptance.pdf";
    TString kinematics = "LH2_Q2_12";
    TString drawMe;

    // Load data and cuts
    CTData *data = new CTData("/home/jmatter/ct_scripts/ct_coin_data.json");
    CTCuts *cuts = new CTCuts("/home/jmatter/ct_scripts/cuts.json");

    // Good ep coincidences
    TCut coinCut  = cuts->Get("coinCutsLH2");

    // Tight SHMS cuts
    TCut tightCut = "abs(P.gtr.th)<.04 && abs(P.gtr.ph)<.015 && (P.gtr.dp<4) && (P.gtr.dp>-3)";

    // Tight HMS cuts
    // TCut tightCut = "H.gtr.th>-.06 && H.gtr.th<.06 && H.gtr.ph>-.02 && H.gtr.ph<.03 && H.gtr.dp>-3   && H.gtr.dp<8";

    //-------------------------------------------------------------------------
    // Plot
    TCanvas *ctight = new TCanvas("ctight", "ctight", 1000, 600);
    TCanvas *ccoin = new TCanvas("ccoin", "ccoin", 1000, 600);
    ctight->Divide(4,2);
    ccoin->Divide(4,2);
    TString histoName;
    std::map<TString, TH1*> histos;

    //---------------------
    // WITH COIN CUTS
    // SHMS xptar vs yptar
    histoName = "SHMS_xptar_vs_yptar_coincut";
    drawMe = Form("P.gtr.th:P.gtr.ph>>%s(100,-.05,.05,100,-.1,.1)", histoName.Data());
    data->GetChain(kinematics)->Draw(drawMe.Data(), coinCut, "goff");
    histos[histoName] = (TH2F*) gDirectory->Get(histoName.Data());

    // SHMS delta
    histoName = "SHMS_delta_coincut";
    drawMe = Form("P.gtr.dp>>%s(58,-12,17)", histoName.Data());
    data->GetChain(kinematics)->Draw(drawMe.Data(), coinCut, "goff");
    histos[histoName] = (TH1F*) gDirectory->Get(histoName.Data());

    // SHMS Cherenkov
    histoName = "SHMS_cherenkov_coincut";
    drawMe = Form("P.ngcer.npeSum:P.hgcer.npeSum>>%s(60,0,30,60,0,30)", histoName.Data());
    data->GetChain(kinematics)->Draw(drawMe.Data(), coinCut, "goff");
    histos[histoName] = (TH2F*) gDirectory->Get(histoName.Data());

    // SHMS Calorimeter
    histoName = "SHMS_calorimeter_coincut";
    drawMe = Form("P.cal.eprtracknorm:(P.cal.etottracknorm-P.cal.eprtracknorm)>>%s(100,0,1.0,100,0,1.0)", histoName.Data());
    data->GetChain(kinematics)->Draw(drawMe.Data(), coinCut, "goff");
    histos[histoName] = (TH1F*) gDirectory->Get(histoName.Data());

    // HMS xptar vs yptar
    histoName = "HMS_xptar_vs_yptar_coincut";
    drawMe = Form("H.gtr.th:H.gtr.ph>>%s(100,-.05,.05,100,-.1,.1)", histoName.Data());
    data->GetChain(kinematics)->Draw(drawMe.Data(), coinCut, "goff");
    histos[histoName] = (TH2F*) gDirectory->Get(histoName.Data());

    // HMS delta
    histoName = "HMS_delta_coincut";
    drawMe = Form("H.gtr.dp>>%s(40,-10,10)", histoName.Data());
    data->GetChain(kinematics)->Draw(drawMe.Data(), coinCut, "goff");
    histos[histoName] = (TH1F*) gDirectory->Get(histoName.Data());

    // HMS Cherenkov
    histoName = "HMS_cherenkov_coincut";
    drawMe = Form("H.cer.npeSum>>%s(60,0,30)", histoName.Data());
    data->GetChain(kinematics)->Draw(drawMe.Data(), coinCut, "goff");
    histos[histoName] = (TH1F*) gDirectory->Get(histoName.Data());

    // HMS Calorimeter
    histoName = "HMS_calorimeter_coincut";
    drawMe = Form("H.cal.etottracknorm>>%s(150,0,1.5)", histoName.Data());
    data->GetChain(kinematics)->Draw(drawMe.Data(), coinCut, "goff");
    histos[histoName] = (TH1F*) gDirectory->Get(histoName.Data());

    ccoin->cd(1); histos["SHMS_xptar_vs_yptar_coincut"]->Draw("colz");
    ccoin->cd(2); histos["SHMS_delta_coincut"]->Draw();
    ccoin->cd(3); histos["SHMS_cherenkov_coincut"]->Draw();
    ccoin->cd(4); histos["SHMS_calorimeter_coincut"]->Draw();
    ccoin->cd(5); histos["HMS_xptar_vs_yptar_coincut"]->Draw("colz");
    ccoin->cd(6); histos["HMS_delta_coincut"]->Draw();
    ccoin->cd(7); histos["HMS_cherenkov_coincut"]->Draw("colz");
    ccoin->cd(8); histos["HMS_calorimeter_coincut"]->Draw("colz");



}
